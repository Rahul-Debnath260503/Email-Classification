# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13KUr0Qs6pRoo6gbiWFd_ctzR4FGX12dY
"""

import nltk
nltk.download('punkt')
nltk.download('stopwords')
import streamlit as st
import pickle
import re

from nltk.corpus import stopwords
import string

# Load model and vectorizer
with open('spam_voting_model.pkl', 'rb') as f:
    model = pickle.load(f)

with open('tfidf_vectorizer.pkl', 'rb') as f:
    vectorizer = pickle.load(f)

nltk.download('stopwords')

# Preprocess function
def preprocess(text):
    text = text.lower()
    text = re.sub(r'\d+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    text = text.strip()
    words = text.split()
    words = [word for word in words if word not in stopwords.words('english')]
    return " ".join(words)

# App layout
st.title("ðŸ“§ Spam Email Classifier")

message = st.text_area("Enter the email text:")

if st.button("Predict"):
    if message.strip() == "":
        st.warning("Please enter a message to classify.")
    else:
        cleaned_msg = preprocess(message)
        msg_vec = vectorizer.transform([cleaned_msg])
        prediction = model.predict(msg_vec)

        if prediction[0] == 1:
            st.error("ðŸš« This is **SPAM**!")
        else:
            st.success("âœ… This is **NOT SPAM**.")